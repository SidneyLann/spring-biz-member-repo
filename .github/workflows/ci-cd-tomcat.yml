name: Spring Boot WAR CI/CD for Tomcat

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

env:
  WAR_NAME: spring-biz-member
  TOMCAT_WEBAPPS_DIR: "/home/dev/app/tomcat/webapps"
  TOMCAT_MANAGER_URL: "https://sh1.koreacentral.cloudapp.azure.com:8080/manager/text"  

jobs:
  build-and-test:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up JDK 21
        uses: actions/setup-java@v3
        with:
          java-version: '21'
          distribution: 'temurin'
          cache: maven

      - name: Cache Maven dependencies
        uses: actions/cache@v3
        with:
          path: ~/.m2/repository
          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
          restore-keys: |
            ${{ runner.os }}-maven-

      - name: Build with Maven
        run: mvn clean package -DskipTests

      - name: Run tests
        run: mvn test

  deploy-to-tomcat:
    runs-on: ubuntu-latest
    needs: build-and-test
    if: github.ref == 'refs/heads/main'
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up JDK 21
        uses: actions/setup-java@v3
        with:
          java-version: '21'
          distribution: 'temurin'

      - name: Build WAR with Maven
        run: mvn clean package -DskipTests

      - name: Deploy WAR to Tomcat via SCP
        uses: cross-the-world/ssh-scp-ssh-pipelines@latest
        with:
          host: ${{ secrets.TOMCAT_HOST }}
          user: ${{ secrets.TOMCAT_USER }}
          pass: ${{ secrets.TOMCAT_PASSWORD }}
          port: ${{ secrets.SSH_PORT || 22 }}
          scp: |
            ./target/${{ env.WAR_NAME }}.war => ${{ env.TOMCAT_WEBAPPS_DIR }}/

      - name: Restart Tomcat (if needed)
        uses: cross-the-world/ssh-scp-ssh-pipelines@latest
        with:
          host: ${{ secrets.TOMCAT_HOST }}
          user: ${{ secrets.TOMCAT_USER }}
          pass: ${{ secrets.TOMCAT_PASSWORD }}
          port: ${{ secrets.SSH_PORT || 22 }}
          last_ssh: |
            sudo systemctl restart tomcat10 || sudo systemctl restart tomcat
            sleep 30
            curl -s ${{ env.TOMCAT_MANAGER_URL }}/list -u ${{ secrets.TOMCAT_MANAGER_USER }}:${{ secrets.TOMCAT_MANAGER_PASSWORD }} | grep ${{ env.WAR_NAME }}
